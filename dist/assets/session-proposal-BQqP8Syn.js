import{s as b,g as E,h as k}from"./BuyScreen-CMhg2IR2.js";import"./index-fFHDa7eL.js";import"./addresses-DVWfx5EX.js";import"./oauth-Baa3Rfpf.js";import"./types-DlKe2M91.js";import"./random-C8YfkVtD.js";import"./approve-Bn_YheWJ.js";import"./passkeys-IfmtYbXL.js";import"./index-BC3X83MF.js";import"./arweave-CAGvOb64.js";import"./index.es-DFcEhUIm.js";import"./constants-wPy4vL4v.js";import"./decimals-BmDseZQ2.js";import"./decimals-CIlTGhrd.js";import"./getCurrencyMetadata-DwMQ1TK0.js";async function R(a){var r,p;const{wallet:t,walletConnectClient:e,event:i,chains:o,onConnect:m}=a,d=t.getAccount();if(!d)throw new Error("No account connected to provided wallet");const n=(p=(r=i.verifyContext)==null?void 0:r.verified)==null?void 0:p.origin;n&&await A({origin:n,walletConnectClient:e});const s=await W({account:d,walletConnectClient:e,sessionProposal:i,chains:o});await b(s),t.subscribe("disconnect",()=>{E({session:s,walletConnectClient:e})}),m==null||m(s)}async function A({walletConnectClient:a,origin:t}){const e=await k();for(const i of e)i.origin===t&&await E({session:i,walletConnectClient:a})}async function W({account:a,walletConnectClient:t,sessionProposal:e,chains:i}){var n,s,r,p,w,f,v,l,u,g,N,h,S,y,$,C,q,x;if(!((n=e.params.requiredNamespaces)!=null&&n.eip155)&&!((s=e.params.optionalNamespaces)!=null&&s.eip155))throw new Error("No EIP155 namespace found in Wallet Connect session proposal");const o={chains:[...Array.from(new Set([...((w=(p=(r=e.params.requiredNamespaces)==null?void 0:r.eip155)==null?void 0:p.chains)==null?void 0:w.map(c=>`${c}:${a.address}`))??[],...((l=(v=(f=e.params.optionalNamespaces)==null?void 0:f.eip155)==null?void 0:v.chains)==null?void 0:l.map(c=>`${c}:${a.address}`))??[],...(i==null?void 0:i.map(c=>`eip155:${c.id}:${a.address}`))??[]]))],methods:[...((g=(u=e.params.requiredNamespaces)==null?void 0:u.eip155)==null?void 0:g.methods)??[],...((h=(N=e.params.optionalNamespaces)==null?void 0:N.eip155)==null?void 0:h.methods)??[]],events:[...((y=(S=e.params.requiredNamespaces)==null?void 0:S.eip155)==null?void 0:y.events)??[],...((C=($=e.params.optionalNamespaces)==null?void 0:$.eip155)==null?void 0:C.events)??[]]};return{topic:(await(await t.approve({id:e.id,namespaces:{eip155:{accounts:o.chains,methods:o.methods,events:o.events}}})).acknowledged()).topic,origin:((x=(q=e.verifyContext)==null?void 0:q.verified)==null?void 0:x.origin)||"Unknown origin"}}export{W as acceptSessionProposal,A as disconnectExistingSessions,R as onSessionProposal};
