const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/signing-CRoDP22G.js","assets/index-fFHDa7eL.js","assets/index-DZ0fb_Ol.css","assets/concat-hex-B7nHc2Z0.js","assets/Signature-CATmt5j1.js","assets/approve-Bn_YheWJ.js","assets/addresses-DVWfx5EX.js","assets/send-eip712-transaction-BbKIVnJp.js","assets/eth_sendRawTransaction-DPdnXbFR.js","assets/random-C8YfkVtD.js"])))=>i.map(i=>d[i]);
import{r as b,p as V,t as Y,i as J,a as Q,w as ut,b as k,s as X,c as S,d as D,e as L,f as yt,g as M,h as H,j as T,E as x,k as tt,l as B,m as q,n as F,o as lt,q as ft,D as et,u as Gt,v as ht,x as O,y as at,z as At,A as gt,M as wt,B as Tt,C as vt,F as Pt,G as xt,H as Ot,I as Lt,J as U,K as E,_ as W,L as Dt,N as bt,O as Ct}from"./index-fFHDa7eL.js";import{o as St,a as Ut,b as Ft}from"./approve-Bn_YheWJ.js";import{Z as nt}from"./addresses-DVWfx5EX.js";import{t as Et,p as It,s as _t}from"./send-eip712-transaction-BbKIVnJp.js";import{r as Vt}from"./random-C8YfkVtD.js";const Nt="0xf15d424e",Ht=[{type:"address",name:"signer"}],Rt=[{type:"tuple",name:"permissions",components:[{type:"address",name:"signer"},{type:"address[]",name:"approvedTargets"},{type:"uint256",name:"nativeTokenLimitPerTransaction"},{type:"uint128",name:"startTimestamp"},{type:"uint128",name:"endTimestamp"}]}];async function $t(t){return b({contract:t.contract,method:[Nt,Ht,Rt],params:[t.signer]})}const kt="0x5892e236",Mt=[{type:"tuple",name:"req",components:[{type:"address",name:"signer"},{type:"uint8",name:"isAdmin"},{type:"address[]",name:"approvedTargets"},{type:"uint256",name:"nativeTokenLimitPerTransaction"},{type:"uint128",name:"permissionStartTimestamp"},{type:"uint128",name:"permissionEndTimestamp"},{type:"uint128",name:"reqValidityStartTimestamp"},{type:"uint128",name:"reqValidityEndTimestamp"},{type:"bytes32",name:"uid"}]},{type:"bytes",name:"signature"}],Bt=[];function qt(t){const a=St(async()=>"asyncParams"in t?await t.asyncParams():t);return V({contract:t.contract,method:[kt,Mt,Bt],params:async()=>{const e=await a();return[e.req,e.signature]},value:async()=>{var e;return(e=(await a()).overrides)==null?void 0:e.value},accessList:async()=>{var e;return(e=(await a()).overrides)==null?void 0:e.accessList},gas:async()=>{var e;return(e=(await a()).overrides)==null?void 0:e.gas},gasPrice:async()=>{var e;return(e=(await a()).overrides)==null?void 0:e.gasPrice},maxFeePerGas:async()=>{var e;return(e=(await a()).overrides)==null?void 0:e.maxFeePerGas},maxPriorityFeePerGas:async()=>{var e;return(e=(await a()).overrides)==null?void 0:e.maxPriorityFeePerGas},nonce:async()=>{var e;return(e=(await a()).overrides)==null?void 0:e.nonce},extraGas:async()=>{var e;return(e=(await a()).overrides)==null?void 0:e.extraGas},erc20Value:async()=>{var e;return(e=(await a()).overrides)==null?void 0:e.erc20Value}})}function Z(){return new Date(Date.now()+1e3*60*60*24*365*10)}function N(t){return Et(Math.floor(t.getTime()/1e3))}const Kt=[{name:"signer",type:"address"},{name:"isAdmin",type:"uint8"},{name:"approvedTargets",type:"address[]"},{name:"nativeTokenLimitPerTransaction",type:"uint256"},{name:"permissionStartTimestamp",type:"uint128"},{name:"permissionEndTimestamp",type:"uint128"},{name:"reqValidityStartTimestamp",type:"uint128"},{name:"reqValidityEndTimestamp",type:"uint128"},{name:"uid",type:"bytes32"}];async function jt(t){const{account:a,contract:e,req:r}=t,o=await a.signTypedData({domain:{name:"Account",version:"1",verifyingContract:e.address,chainId:e.chain.id},primaryType:"SignerPermissionRequest",types:{SignerPermissionRequest:Kt},message:r});return{req:r,signature:o}}async function zt(t){var r;const{target:a,permissions:e}=t;return{approvedTargets:e.approvedTargets==="*"?[nt]:e.approvedTargets,nativeTokenLimitPerTransaction:Y(((r=e.nativeTokenLimitPerTransaction)==null?void 0:r.toString())||"0"),permissionStartTimestamp:N(e.permissionStartTimestamp||new Date(0)),permissionEndTimestamp:N(e.permissionEndTimestamp||Z()),reqValidityStartTimestamp:0n,reqValidityEndTimestamp:N(Z()),uid:await Vt(),isAdmin:0,signer:a}}function Wt(t){const{contract:a,sessionKeyAddress:e,account:r,permissions:o}=t;return qt({contract:a,async asyncParams(){const{req:n,signature:i}=await jt({account:r,contract:a,req:await zt({target:e,permissions:o})});return{signature:i,req:n}}})}async function Zt(t){var i;const{accountContract:a,sessionKeyAddress:e,newPermissions:r}=t;if(!await J(a))return!0;const n=await $t({contract:a,signer:e});return!!(n.endTimestamp&&n.endTimestamp<Math.floor(new Date().getTime()/1e3)||!Yt(n.approvedTargets,r.approvedTargets)||Y(((i=r.nativeTokenLimitPerTransaction)==null?void 0:i.toString())??"0")>n.nativeTokenLimitPerTransaction)}function Yt(t,a){return a==="*"&&t.length===1&&t[0]===nt?!0:a!=="*"?a.map(e=>e.toLowerCase()).every(e=>t.map(r=>r.toLowerCase()).includes(e)):!1}const Jt=2n**96n-1n;function Qt(t={}){return Q({signature:"event UserOperationRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason)",filters:t})}function Xt(t={}){return Q({signature:"event PostOpRevertReason(bytes32 indexed userOpHash, address indexed sender, uint256 nonce, bytes revertReason)",filters:t})}function te(t){const{receipt:a}=t,e={...a,transactionHash:a.transactionHash,blockNumber:a.blockNumber?BigInt(a.blockNumber):null,contractAddress:a.contractAddress?a.contractAddress:null,cumulativeGasUsed:a.cumulativeGasUsed?BigInt(a.cumulativeGasUsed):null,effectiveGasPrice:a.effectiveGasPrice?BigInt(a.effectiveGasPrice):null,gasUsed:a.gasUsed?BigInt(a.gasUsed):null,logs:a.logs,to:a.to?a.to:null,transactionIndex:a.transactionIndex,status:a.status,type:a.type};return a.blobGasPrice&&(e.blobGasPrice=BigInt(a.blobGasPrice)),a.blobGasUsed&&(e.blobGasUsed=BigInt(a.blobGasUsed)),{...t,receipt:e,userOpHash:t.userOpHash,actualGasCost:BigInt(t.actualGasCost),actualGasUsed:BigInt(t.actualGasUsed),nonce:BigInt(t.nonce)}}async function ee(t){const{factoryContract:a,predictAddressOverride:e,adminAddress:r,accountSalt:o,accountAddress:n}=t;if(e)return e(a,r);if(n)return n;if(!r)throw new Error("Account address is required to predict the smart wallet address.");return ut(async()=>{const i=o&&k(o)?o:X(o??"");return b({contract:a,method:"function getAddress(address, bytes) returns (address)",params:[r,i]})},{cacheKey:`${t.factoryContract.chain.id}-${t.factoryContract.address}-${t.adminAddress}-${t.accountSalt}`,cacheTime:1e3*60*60*24})}function st(t){const{adminAddress:a,factoryContract:e,createAccountOverride:r,accountSalt:o}=t;if(r)return r(e,a);const n=o&&k(o)?o:X(o??"");return V({contract:e,method:"function createAccount(address, bytes) returns (address)",params:[a,n]})}function rt(t){const{accountContract:a,transaction:e,executeOverride:r}=t;return r?r(a,e):V({contract:a,method:"function execute(address, uint256, bytes)",params:[e.to||"",e.value||0n,e.data||"0x"],gas:e.gas?e.gas+21000n:void 0})}function ae(t){const{accountContract:a,transactions:e,executeBatchOverride:r}=t;return r?r(a,e):V({contract:a,method:"function executeBatch(address[], uint256[], bytes[])",params:[e.map(o=>o.to||""),e.map(o=>o.value||0n),e.map(o=>o.data||"0x")]})}const ne="0x35567e1a",se=[{type:"address",name:"sender"},{type:"uint192",name:"key"}],re=[{type:"uint256",name:"nonce"}];async function ie(t){return b({contract:t.contract,method:[ne,se,re],params:[t.sender,t.key]})}const oe="0xa6193531",ce=[{type:"tuple",name:"userOp",components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes",name:"initCode"},{type:"bytes",name:"callData"},{type:"uint256",name:"callGasLimit"},{type:"uint256",name:"verificationGasLimit"},{type:"uint256",name:"preVerificationGas"},{type:"uint256",name:"maxFeePerGas"},{type:"uint256",name:"maxPriorityFeePerGas"},{type:"bytes",name:"paymasterAndData"},{type:"bytes",name:"signature"}]}],de=[{type:"bytes32"}];async function pe(t){return b({contract:t.contract,method:[oe,ce,de],params:[t.userOp]})}const me="0x22cdde4c",ue=[{type:"tuple",name:"userOp",components:[{type:"address",name:"sender"},{type:"uint256",name:"nonce"},{type:"bytes",name:"initCode"},{type:"bytes",name:"callData"},{type:"bytes32",name:"accountGasLimits"},{type:"uint256",name:"preVerificationGas"},{type:"bytes32",name:"gasFees"},{type:"bytes",name:"paymasterAndData"},{type:"bytes",name:"signature"}]}],ye=[{type:"bytes32"}];async function le(t){return b({contract:t.contract,method:[me,ue,ye],params:[t.userOp]})}function fe(t){return t.factory?S([t.factory,t.factoryData||"0x"]):"0x"}function Ge(t){return S([D(L(t.verificationGasLimit),{size:16}),D(L(t.callGasLimit),{size:16})])}function he(t){return S([D(L(t.maxPriorityFeePerGas),{size:16}),D(L(t.maxFeePerGas),{size:16})])}function Ae(t){return t.paymaster?S([t.paymaster,D(L(t.paymasterVerificationGasLimit||BigInt(0)),{size:16}),D(L(t.paymasterPostOpGasLimit||BigInt(0)),{size:16}),t.paymasterData||"0x"]):"0x"}const ge=t=>({sender:t.sender,nonce:t.nonce,initCode:fe(t),callData:t.callData,accountGasLimits:Ge(t),preVerificationGas:t.preVerificationGas,gasFees:he(t),paymasterAndData:Ae(t),signature:t.signature}),we=()=>{const t=BigInt(Math.floor(Math.random()*4294967296)),a=BigInt(Math.floor(Math.random()*4294967296)),e=BigInt(Math.floor(Math.random()*4294967296)),r=BigInt(Math.floor(Math.random()*4294967296)),o=BigInt(Math.floor(Math.random()*4294967296)),n=BigInt(Math.floor(Math.random()*4294967296));return t<<BigInt(160)|a<<BigInt(128)|e<<BigInt(96)|r<<BigInt(64)|o<<BigInt(32)|n};function K(t){return Object.fromEntries(Object.entries(t).map(([a,e])=>[a,e==null||k(e)?e:yt(e)]))}async function I(t){var A;const{userOp:a,paymasterOverride:e,client:r,chain:o,entrypointAddress:n}=t;if(e)return e(a);const i={"Content-Type":"application/json"},s=n??x,c=M(o),m={jsonrpc:"2.0",id:1,method:"pm_sponsorUserOperation",params:[K(a),s]},l=await tt(r)(c,{method:"POST",headers:i,body:H(m)}),p=await l.json();if(!l.ok){const g=p.error||l.statusText,w=p.code||"UNKNOWN";throw new Error(`Paymaster error: ${g}
Status: ${l.status}
Code: ${w}`)}if(p.result)return typeof p.result=="string"?{paymasterAndData:p.result}:(p.result.policyId&&p.result.reason&&console.warn(`Paymaster policy rejected this transaction with reason: ${p.result.reason} (policyId: ${p.result.policyId})`),{paymasterAndData:p.result.paymasterAndData,verificationGasLimit:p.result.verificationGasLimit?T(p.result.verificationGasLimit):void 0,preVerificationGas:p.result.preVerificationGas?T(p.result.preVerificationGas):void 0,callGasLimit:p.result.callGasLimit?T(p.result.callGasLimit):void 0,paymaster:p.result.paymaster,paymasterData:p.result.paymasterData,paymasterVerificationGasLimit:p.result.paymasterVerificationGasLimit?T(p.result.paymasterVerificationGasLimit):void 0,paymasterPostOpGasLimit:p.result.paymasterPostOpGasLimit?T(p.result.paymasterPostOpGasLimit):void 0});const h=((A=p.error)==null?void 0:A.message)||p.error||l.statusText||"unknown error";throw new Error(`Paymaster error from ${c}: ${h}`)}const j=new Set,z=t=>`${t.chain.id}:${t.address}`,it=t=>{j.add(z(t))},ot=t=>{j.delete(z(t))},ct=t=>j.has(z(t));async function Te(t){const a=t.timeoutMs||12e4,e=t.intervalMs||1e3,r=Date.now()+a;for(;Date.now()<r;){const o=await Ue(t);if(o)return o;await new Promise(n=>setTimeout(n,e))}throw new Error(`Timeout waiting for userOp to be mined on chain ${t.chain.id} with UserOp hash: ${t.userOpHash}`)}async function ve(t){var G;const{transaction:a,accountContract:e,factoryContract:r,adminAddress:o,overrides:n,sponsorGas:i,waitForDeployment:s=!0,isDeployedOverride:c}=t,m=a.chain,y=a.client,l={client:y,chain:m,bundlerUrl:n==null?void 0:n.bundlerUrl,entrypointAddress:n==null?void 0:n.entrypointAddress},p=B(((G=t.overrides)==null?void 0:G.entrypointAddress)||x),[h,A,g,w,f]=await Promise.all([typeof c=="boolean"?c:J(e).then(v=>v||ct(e)),q(a),F(a.gas),Pe({executeTx:a,bundlerOptions:l,chain:m,client:y}),be({accountContract:e,chain:m,client:y,entrypointAddress:n==null?void 0:n.entrypointAddress,getNonceOverride:n==null?void 0:n.getAccountNonce})]),{maxFeePerGas:d,maxPriorityFeePerGas:u}=w;return p==="v0.7"?xe({bundlerOptions:l,factoryContract:r,accountContract:e,adminAddress:o,sponsorGas:i,overrides:n,isDeployed:h,nonce:f,callData:A,callGasLimit:g,maxFeePerGas:d,maxPriorityFeePerGas:u,waitForDeployment:s}):Oe({bundlerOptions:l,factoryContract:r,accountContract:e,adminAddress:o,sponsorGas:i,overrides:n,isDeployed:h,nonce:f,callData:A,callGasLimit:g,maxFeePerGas:d,maxPriorityFeePerGas:u,waitForDeployment:s})}async function Pe(t){const{executeTx:a,bundlerOptions:e,chain:r,client:o}=t;let{maxFeePerGas:n,maxPriorityFeePerGas:i}=a;const s=(e==null?void 0:e.bundlerUrl)??M(r);if(lt(s)){const c=await Se({options:e});n=c.maxFeePerGas,i=c.maxPriorityFeePerGas}else{const[c,m]=await Promise.all([F(n),F(i)]);if(c&&m)n=c,i=m;else{const y=await ft(o,r);i=m??y.maxPriorityFeePerGas??0n,n=c??y.maxFeePerGas??0n}}return{maxFeePerGas:n,maxPriorityFeePerGas:i}}async function xe(t){const{bundlerOptions:a,isDeployed:e,factoryContract:r,accountContract:o,adminAddress:n,sponsorGas:i,overrides:s,nonce:c,callData:m,callGasLimit:y,maxFeePerGas:l,maxPriorityFeePerGas:p,waitForDeployment:h}=t,{chain:A,client:g}=a;let w,f;e?(f="0x",h&&await dt(o)):(w=r.address,f=await q(st({factoryContract:r,adminAddress:n,accountSalt:s==null?void 0:s.accountSalt,createAccountOverride:s==null?void 0:s.createAccount})),it(o));const d={sender:o.address,nonce:c,callData:m,maxFeePerGas:l,maxPriorityFeePerGas:p,callGasLimit:y??0n,verificationGasLimit:0n,preVerificationGas:0n,factory:w,factoryData:f,paymaster:void 0,paymasterData:"0x",paymasterVerificationGasLimit:0n,paymasterPostOpGasLimit:0n,signature:et};if(i){const u=await I({userOp:d,chain:A,client:g,entrypointAddress:s==null?void 0:s.entrypointAddress,paymasterOverride:s==null?void 0:s.paymaster});if(u.paymaster&&u.paymasterData&&(d.paymaster=u.paymaster,d.paymasterData=u.paymasterData),u.callGasLimit&&u.verificationGasLimit&&u.preVerificationGas&&u.paymasterPostOpGasLimit&&u.paymasterVerificationGasLimit)d.callGasLimit=u.callGasLimit,d.verificationGasLimit=u.verificationGasLimit,d.preVerificationGas=u.preVerificationGas,d.paymasterPostOpGasLimit=u.paymasterPostOpGasLimit,d.paymasterVerificationGasLimit=u.paymasterVerificationGasLimit;else{const G=s!=null&&s.tokenPaymaster?{[s.tokenPaymaster.tokenAddress]:{stateDiff:{[Gt(ht([{type:"address"},{type:"uint256"}],[o.address,s.tokenPaymaster.balanceStorageSlot]))]:L(gt,{size:32})}}}:void 0,v=await _({userOp:d,options:a},G);d.callGasLimit=v.callGasLimit,d.verificationGasLimit=v.verificationGasLimit,d.preVerificationGas=v.preVerificationGas,d.paymasterPostOpGasLimit=s!=null&&s.tokenPaymaster?500000n:v.paymasterPostOpGasLimit||0n,d.paymasterVerificationGasLimit=v.paymasterVerificationGasLimit||0n;const P=await I({userOp:d,chain:A,client:g,entrypointAddress:s==null?void 0:s.entrypointAddress,paymasterOverride:s==null?void 0:s.paymaster});P.paymaster&&P.paymasterData&&(d.paymaster=P.paymaster,d.paymasterData=P.paymasterData)}}else{const u=await _({userOp:d,options:a});d.callGasLimit=u.callGasLimit,d.verificationGasLimit=u.verificationGasLimit,d.preVerificationGas=u.preVerificationGas,d.paymasterPostOpGasLimit=u.paymasterPostOpGasLimit||0n,d.paymasterVerificationGasLimit=u.paymasterVerificationGasLimit||0n}return{...d,signature:"0x"}}async function Oe(t){const{bundlerOptions:a,isDeployed:e,factoryContract:r,accountContract:o,adminAddress:n,sponsorGas:i,overrides:s,nonce:c,callData:m,callGasLimit:y,maxFeePerGas:l,maxPriorityFeePerGas:p,waitForDeployment:h}=t,{chain:A,client:g}=a;let w;e?(w="0x",h&&await dt(o)):(w=await De({factoryContract:r,adminAddress:n,accountSalt:s==null?void 0:s.accountSalt,createAccountOverride:s==null?void 0:s.createAccount}),it(o));const f={sender:o.address,nonce:c,initCode:w,callData:m,maxFeePerGas:l,maxPriorityFeePerGas:p,callGasLimit:y??0n,verificationGasLimit:0n,preVerificationGas:0n,paymasterAndData:"0x",signature:et};if(i){const d=await I({userOp:f,chain:A,client:g,entrypointAddress:s==null?void 0:s.entrypointAddress,paymasterOverride:s==null?void 0:s.paymaster}),u="paymasterAndData"in d?d.paymasterAndData:"0x";if(u&&u!=="0x"&&(f.paymasterAndData=u),d.callGasLimit&&d.verificationGasLimit&&d.preVerificationGas)f.callGasLimit=d.callGasLimit,f.verificationGasLimit=d.verificationGasLimit,f.preVerificationGas=d.preVerificationGas;else{const G=await _({userOp:f,options:a});if(f.callGasLimit=G.callGasLimit,f.verificationGasLimit=G.verificationGasLimit,f.preVerificationGas=G.preVerificationGas,u&&u!=="0x"){const v=await I({userOp:f,chain:A,client:g,entrypointAddress:s==null?void 0:s.entrypointAddress,paymasterOverride:s==null?void 0:s.paymaster}),P="paymasterAndData"in v?v.paymasterAndData:"0x";P&&P!=="0x"&&(f.paymasterAndData=P)}}}else{const d=await _({userOp:f,options:a});f.callGasLimit=d.callGasLimit,f.verificationGasLimit=d.verificationGasLimit,f.preVerificationGas=d.preVerificationGas}return{...f,signature:"0x"}}async function Le(t){const{userOp:a,chain:e,entrypointAddress:r,adminAccount:o}=t,n=B(r||x);let i;if(n==="v0.7"){const s=ge(a);i=await le({contract:O({address:r||at,chain:e,client:t.client}),userOp:s})}else i=await pe({contract:O({address:r||x,chain:e,client:t.client}),userOp:a});if(o.signMessage){const s=await o.signMessage({message:{raw:At(i)}});return{...a,signature:s}}throw new Error("signMessage not implemented in signingAccount")}async function De(t){const{factoryContract:a,adminAddress:e,accountSalt:r,createAccountOverride:o}=t,n=st({factoryContract:a,adminAddress:e,accountSalt:r,createAccountOverride:o});return S([a.address,await q(n)])}async function be(t){const{accountContract:a,chain:e,client:r,entrypointAddress:o,getNonceOverride:n}=t;return n?n(a):await ie({contract:O({address:o||x,chain:e,client:r}),key:we(),sender:a.address})}async function dt(t){const a=Date.now();for(;ct(t);){if(Date.now()-a>6e4)throw ot(t),new Error("Account deployment is taking too long (over 1 minute). Please try again.");await new Promise(e=>setTimeout(e,500))}}async function Ce(t){return C({...t,operation:"eth_sendUserOperation",params:[K(t.userOp),t.options.entrypointAddress??x]})}async function _(t,a){const e=await C({...t,operation:"eth_estimateUserOperationGas",params:[K(t.userOp),t.options.entrypointAddress??x,a??{}]});return{preVerificationGas:T(e.preVerificationGas),verificationGas:e.verificationGas!==void 0?T(e.verificationGas):void 0,verificationGasLimit:T(e.verificationGasLimit),callGasLimit:T(e.callGasLimit)+wt,paymasterVerificationGasLimit:e.paymasterVerificationGasLimit!==void 0?T(e.paymasterVerificationGasLimit):void 0,paymasterPostOpGasLimit:e.paymasterPostOpGasLimit!==void 0?T(e.paymasterPostOpGasLimit):void 0}}async function Se(t){const a=await C({...t,operation:"thirdweb_getUserOperationGasPrice",params:[]});return{maxPriorityFeePerGas:T(a.maxPriorityFeePerGas),maxFeePerGas:T(a.maxFeePerGas)}}async function Ue(t){var e,r;const a=await Fe(t);if(a){if(a.success===!1){const n=(r=(e=Tt({events:[Qt(),Xt()],logs:a.logs})[0])==null?void 0:e.args)==null?void 0:r.revertReason;if(!n)throw new Error(`UserOp failed at txHash: ${a.receipt.transactionHash}`);const i=vt({data:n});throw new Error(`UserOp failed with reason: '${i.args.join(",")}' at txHash: ${a.receipt.transactionHash}`)}return a.receipt}}async function Fe(t){const a=await C({options:t,operation:"eth_getUserOperationReceipt",params:[t.userOpHash]});if(a)return te(a)}async function Ee(t){const a=await C({options:t.options,operation:"zk_paymasterData",params:[t.transaction]});return{paymaster:a.paymaster,paymasterInput:a.paymasterInput}}async function Ie(t){return{transactionHash:(await C({options:t.options,operation:"zk_broadcastTransaction",params:[{...t.transaction,signedTransaction:t.signedTransaction}]})).transactionHash}}async function C(t){const{options:a,operation:e,params:r}=t,o=a.bundlerUrl??M(a.chain),i=await tt(a.client)(o,{method:"POST",headers:{"Content-Type":"application/json"},body:H({jsonrpc:"2.0",id:1,method:e,params:r})}),s=await i.json();if(!i.ok||s.error){let c=s.error||i.statusText;typeof c=="object"&&(c=H(c));const m=s.code||"UNKNOWN";throw new Error(`${e} error: ${c}
Status: ${i.status}
Code: ${m}`)}return s.result}const pt=new WeakMap,R=new WeakMap;async function _e(t,a){var h,A,g,w,f,d,u;const{personalAccount:e,client:r,chain:o}=t;if(!e)throw new Error("No personal account provided for smart account connection");const n=a,i=o??n.chain,s="gasless"in n?n.gasless:n.sponsorGas;if(await Pt(i))return[Re({creationOptions:a,connectionOptions:t,chain:i,sponsorGas:s}),i];if(n.factoryAddress&&!((h=n.overrides)!=null&&h.entrypointAddress)){const G=await mt(n.factoryAddress,r,i);G&&(n.overrides={...n.overrides,entrypointAddress:G})}(A=n.overrides)!=null&&A.tokenPaymaster&&!((g=n.overrides)!=null&&g.entrypointAddress)&&(n.overrides={...n.overrides,entrypointAddress:at});const c=n.factoryAddress??xt((w=n.overrides)==null?void 0:w.entrypointAddress),m=O({client:r,address:c,chain:i}),y=await ee({factoryContract:m,adminAddress:e.address,predictAddressOverride:(f=n.overrides)==null?void 0:f.predictAddress,accountSalt:(d=n.overrides)==null?void 0:d.accountSalt,accountAddress:(u=n.overrides)==null?void 0:u.accountAddress}).then(G=>G).catch(G=>{throw new Error(`Failed to get account address with factory contract ${m.address} on chain ID ${i.id}: ${(G==null?void 0:G.message)||"unknown error"}`,{cause:G})}),l=O({client:r,address:y,chain:i}),p=await Ne({...n,chain:i,sponsorGas:s,personalAccount:e,accountContract:l,factoryContract:m,client:r});if(pt.set(e,p),R.set(p,e),n.sessionKey&&await Zt({accountContract:l,sessionKeyAddress:n.sessionKey.address,newPermissions:n.sessionKey.permissions})){const G=Wt({account:e,contract:l,permissions:n.sessionKey.permissions,sessionKeyAddress:n.sessionKey.address});await Ot({account:p,transaction:G})}return[p,i]}async function Ve(t){const a=R.get(t);a&&(pt.delete(a),R.delete(t))}async function Ne(t){var o,n;const a=(o=t.overrides)==null?void 0:o.tokenPaymaster;if(a&&B(((n=t.overrides)==null?void 0:n.entrypointAddress)||x)!=="v0.7")throw new Error("Token paymaster is only supported for entrypoint version v0.7");let e=t.accountContract;const r={address:Lt(e.address),async sendTransaction(i){var y,l,p;let s;if(a){await He({accountContract:e,erc20Paymaster:a,options:t});const h=async()=>({paymaster:a.paymasterAddress,paymasterData:"0x"});s=((y=t.overrides)==null?void 0:y.paymaster)||h}else s=(l=t.overrides)==null?void 0:l.paymaster;i.chainId!==e.chain.id&&(e=O({address:r.address,chain:U(i.chainId),client:t.client}));const c=rt({accountContract:e,transaction:i,executeOverride:(p=t.overrides)==null?void 0:p.execute}),m=await $({executeTx:c,options:{...t,chain:U(i.chainId),accountContract:e,overrides:{...t.overrides,paymaster:s}}});return E({client:t.client,chainId:t.chain.id,transactionHash:m.transactionHash,walletAddress:t.accountContract.address,walletType:"smart",contractAddress:i.to??void 0}),m},async sendBatchTransaction(i){var m,y,l;const s=ae({accountContract:e,transactions:i,executeBatchOverride:(m=t.overrides)==null?void 0:m.executeBatch}),c=await $({executeTx:s,options:{...t,chain:U(((y=i[0])==null?void 0:y.chainId)??t.chain.id),accountContract:e}});return E({client:t.client,chainId:t.chain.id,transactionHash:c.transactionHash,walletAddress:t.accountContract.address,walletType:"smart",contractAddress:((l=i[0])==null?void 0:l.to)??void 0}),c},async signMessage({message:i}){var c;if((c=t.overrides)!=null&&c.signMessage)return t.overrides.signMessage({adminAccount:t.personalAccount,factoryContract:t.factoryContract,accountContract:e,message:i});const{smartAccountSignMessage:s}=await W(async()=>{const{smartAccountSignMessage:m}=await import("./signing-CRoDP22G.js");return{smartAccountSignMessage:m}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]));return s({accountContract:e,factoryContract:t.factoryContract,options:t,message:i})},async signTypedData(i){var c;if((c=t.overrides)!=null&&c.signTypedData)return t.overrides.signTypedData({adminAccount:t.personalAccount,factoryContract:t.factoryContract,accountContract:e,typedData:i});const{smartAccountSignTypedData:s}=await W(async()=>{const{smartAccountSignTypedData:m}=await import("./signing-CRoDP22G.js");return{smartAccountSignTypedData:m}},__vite__mapDeps([0,1,2,3,4,5,6,7,8,9]));return s({accountContract:e,factoryContract:t.factoryContract,options:t,typedData:i})},async onTransactionRequested(i){var s,c;return(c=(s=t.personalAccount).onTransactionRequested)==null?void 0:c.call(s,i)}};return r}async function He(t){var y;const{accountContract:a,erc20Paymaster:e,options:r}=t,o=e.tokenAddress,n=O({address:o,chain:a.chain,client:a.client});if(await Ut({contract:n,owner:a.address,spender:e.paymasterAddress})>0n)return;const s=Ft({contract:n,spender:e.paymasterAddress,amountWei:Jt-1n}),c=await Dt({transaction:s,from:a.address}),m=rt({accountContract:a,transaction:c,executeOverride:(y=r.overrides)==null?void 0:y.execute});await $({executeTx:m,options:{...r,overrides:{...r.overrides,tokenPaymaster:void 0}}})}function Re(t){const{creationOptions:a,connectionOptions:e,chain:r}=t,o={address:e.personalAccount.address,async sendTransaction(n){var y,l,p,h;const i={data:n.data,to:n.to??void 0,value:n.value??0n,chain:U(n.chainId),client:e.client,eip712:n.eip712};let s=await It({account:o,transaction:i});if(t.sponsorGas&&!s.paymaster){const A=await Ee({options:{client:e.client,chain:r,bundlerUrl:(y=a.overrides)==null?void 0:y.bundlerUrl,entrypointAddress:(l=a.overrides)==null?void 0:l.entrypointAddress},transaction:s});s={...s,...A}}const c=await _t({account:o,chainId:r.id,eip712Transaction:s}),m=await Ie({options:{client:e.client,chain:r,bundlerUrl:(p=a.overrides)==null?void 0:p.bundlerUrl,entrypointAddress:(h=a.overrides)==null?void 0:h.entrypointAddress},transaction:s,signedTransaction:c});return E({client:e.client,chainId:r.id,transactionHash:m.transactionHash,walletAddress:o.address,walletType:"smart",contractAddress:n.to??void 0}),{transactionHash:m.transactionHash,client:e.client,chain:r}},async signMessage({message:n}){return e.personalAccount.signMessage({message:n})},async signTypedData(n){const i=bt(n);return e.personalAccount.signTypedData(i)},async onTransactionRequested(n){var i,s;return(s=(i=e.personalAccount).onTransactionRequested)==null?void 0:s.call(i,n)}};return o}async function $(t){var r,o,n;const{executeTx:a,options:e}=t;try{const i=await ve({transaction:a,factoryContract:e.factoryContract,accountContract:e.accountContract,adminAddress:e.personalAccount.address,sponsorGas:e.sponsorGas,overrides:e.overrides}),s=await Le({client:e.client,chain:e.chain,adminAccount:e.personalAccount,entrypointAddress:(r=e.overrides)==null?void 0:r.entrypointAddress,userOp:i}),c={chain:e.chain,client:e.client,bundlerUrl:(o=e.overrides)==null?void 0:o.bundlerUrl,entrypointAddress:(n=e.overrides)==null?void 0:n.entrypointAddress},m=await Ce({options:c,userOp:s}),y=await Te({...c,userOpHash:m});return E({client:e.client,chainId:e.chain.id,transactionHash:y.transactionHash,walletAddress:e.accountContract.address,walletType:"smart",contractAddress:await F(a.to??void 0)}),{client:e.client,chain:e.chain,transactionHash:y.transactionHash}}finally{ot(e.accountContract)}}async function mt(t,a,e){const r=O({address:t,client:a,chain:e});try{return await b({contract:r,method:"function entrypoint() public view returns (address)"})}catch{return}}const Ke=Object.freeze(Object.defineProperty({__proto__:null,connectSmartAccount:_e,disconnectSmartAccount:Ve,getEntrypointFromFactory:mt,isSmartWallet:Ct},Symbol.toStringTag,{value:"Module"}));export{Ke as i,st as p};
