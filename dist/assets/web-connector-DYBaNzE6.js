const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/eth_getTransactionCount-DZL9WXCX.js","assets/index-fFHDa7eL.js","assets/index-DZ0fb_Ol.css","assets/passkeys-IfmtYbXL.js","assets/oauth-Baa3Rfpf.js","assets/types-DlKe2M91.js"])))=>i.map(i=>d[i]);
import{a8 as p,k as d,h,I as y,a9 as k,J as T,K as j,aa as z,N as D,f,_,ab as b,ac as v,ad as R,ae as E}from"./index-fFHDa7eL.js";import{g as A,C as L,a as P,I as G,l as Q,b as q}from"./oauth-Baa3Rfpf.js";import{r as V}from"./random-C8YfkVtD.js";import{signLoginPayload as H}from"./sign-login-payload-BS5pcbMU.js";import{e as $}from"./eth_sendRawTransaction-DPdnXbFR.js";import"./types-DlKe2M91.js";async function W({authToken:i,client:e,ecosystem:t}){const r=await d(e,t)(`${p("inAppWallet")}/api/2024-05-05/accounts`,{method:"GET",headers:{"Content-Type":"application/json","x-thirdweb-client-id":e.clientId,Authorization:`Bearer embedded-wallet-token:${i}`}});if(!r.ok){if(r.status===401)return;const o=await r.json();throw new Error(`Failed to get user status: ${o.message}`)}return await r.json()}const J=p("inAppWallet"),x=`${J}/`,F=`${x}api/2023-10-20`,Y=`${F}/embedded-wallet/validate-custom-jwt`,K=`${F}/embedded-wallet/validate-custom-auth-endpoint`,U=(i,e)=>e instanceof Error?`${i}: ${e.message}`:`${i}: ${h(e)}`;async function X(i){const t=await d(i.client,i.ecosystem)(K,{method:"POST",headers:{"Content-Type":"application/json"},body:h({payload:i.payload,developerClientId:i.client.clientId})});if(!t.ok){const n=await t.json();throw new Error(`Custom auth endpoint authentication error: ${n.message}`)}try{const{verifiedToken:n}=await t.json();return{storedToken:n}}catch(n){throw new Error(U("Malformed response from post auth_endpoint authentication",n))}}async function Z(i){const e=d(i.client,i.ecosystem),t=A({authOption:"backend",client:i.client,ecosystem:i.ecosystem}),n=await e(`${t}`,{method:"POST",headers:{"Content-Type":"application/json"},body:h({walletSecret:i.walletSecret})});if(!n.ok)throw new Error("Failed to generate backend account");return await n.json()}async function ee(i){const e=new L({storage:i.storage,clientId:i.client.clientId,ecosystem:i.ecosystem});let t=await e.getGuestSessionId();t||(t=V(32),e.saveGuestSessionId(t));const n=d(i.client,i.ecosystem),r=P({authOption:"guest",client:i.client,ecosystem:i.ecosystem}),o=await n(`${r}`,{method:"POST",headers:{"Content-Type":"application/json"},body:h({sessionId:t})});if(!o.ok)throw new Error("Failed to generate guest account");return await o.json()}async function te(i){const t=await d(i.client,i.ecosystem)(Y,{method:"POST",headers:{"Content-Type":"application/json"},body:h({jwt:i.jwt,developerClientId:i.client.clientId})});if(!t.ok){const n=await t.json();throw new Error(`JWT authentication error: ${n.message}`)}try{const{verifiedToken:n}=await t.json();return{storedToken:n}}catch(n){throw new Error(U("Malformed response from post jwt authentication",n))}}async function ne({client:i,ecosystem:e,tokenToLink:t,storage:n}){const r=d(i,e),o=p("inAppWallet"),a=await n.getAuthCookie();if(!a)throw new Error("Failed to link account, no user logged in");const s={Authorization:`Bearer iaw-auth-token:${a}`,"Content-Type":"application/json"},l=await r(`${o}/api/2024-05-05/account/connect`,{method:"POST",headers:s,body:h({accountAuthTokenToConnect:t})});if(!l.ok){const u=await l.json();throw new Error(u.message||"Failed to link account.")}const{linkedAccounts:c}=await l.json();return c??[]}async function ae({client:i,ecosystem:e,profileToUnlink:t,storage:n}){const r=d(i,e),o=p("inAppWallet"),a=await n.getAuthCookie();if(!a)throw new Error("Failed to unlink account, no user logged in");const s={Authorization:`Bearer iaw-auth-token:${a}`,"Content-Type":"application/json"},l=await r(`${o}/api/2024-05-05/account/disconnect`,{method:"POST",headers:s,body:h(t)});if(!l.ok){const u=await l.json();throw new Error(u.message||"Failed to unlink account.")}const{linkedAccounts:c}=await l.json();return c??[]}async function ie({client:i,ecosystem:e,storage:t}){const n=d(i,e),r=p("inAppWallet"),o=await t.getAuthCookie();if(!o)throw new Error("Failed to get linked accounts, no user logged in");const a={Authorization:`Bearer iaw-auth-token:${o}`,"Content-Type":"application/json"},s=await n(`${r}/api/2024-05-05/accounts`,{method:"GET",headers:a});if(!s.ok){const c=await s.json();throw new Error(c.message||"Failed to get linked accounts.")}const{linkedAccounts:l}=await s.json();return l??[]}function N(){return`${p("inAppWallet")}/api/2024-05-05/login/passkey/callback`}function B(i,e){return`${p("inAppWallet")}/api/2024-05-05/login/passkey?type=${i}${e?`&username=${e}`:""}`}async function re(i){var u,w,g;if(!i.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const e=d(i.client,i.ecosystem),t=i.username??oe(i.ecosystem),r=await(await e(B("sign-up",t))).json();if(!r.challenge)throw new Error("No challenge received");const o=r.challenge,a=await i.passkeyClient.register({name:t,challenge:o,rp:i.rp}),s={};(u=i.ecosystem)!=null&&u.partnerId&&(s["x-ecosystem-partner-id"]=i.ecosystem.partnerId),(w=i.ecosystem)!=null&&w.id&&(s["x-ecosystem-id"]=i.ecosystem.id);const c=await(await e(N(),{method:"POST",headers:{"Content-Type":"application/json",...s},body:h({type:"sign-up",authenticatorData:a.authenticatorData,credentialId:a.credentialId,serverVerificationId:r.serverVerificationId,clientData:a.clientData,username:t,credential:{publicKey:a.credential.publicKey,algorithm:a.credential.algorithm},origin:a.origin,rpId:i.rp.id})})).json();if(!c||!c.storedToken)throw new Error(`Error verifying passkey: ${c.message??"unknown error"}`);return await((g=i.storage)==null?void 0:g.savePasskeyCredentialId(a.credentialId)),c}async function se(i){var c,u,w,g;if(!i.passkeyClient.isAvailable())throw new Error("Passkeys are not available on this device");const e=d(i.client,i.ecosystem),[t,n]=await Promise.all([e(B("sign-in")).then(m=>m.json()),(c=i.storage)==null?void 0:c.getPasskeyCredentialId()]);if(!t.challenge)throw new Error("No challenge received");const r=t.challenge,o=await i.passkeyClient.authenticate({credentialId:n??void 0,challenge:r,rp:i.rp}),a={};(u=i.ecosystem)!=null&&u.partnerId&&(a["x-ecosystem-partner-id"]=i.ecosystem.partnerId),(w=i.ecosystem)!=null&&w.id&&(a["x-ecosystem-id"]=i.ecosystem.id);const l=await(await e(N(),{method:"POST",headers:{"Content-Type":"application/json",...a},body:h({type:"sign-in",authenticatorData:o.authenticatorData,credentialId:o.credentialId,serverVerificationId:t.serverVerificationId,clientData:o.clientData,signature:o.signature,origin:o.origin,rpId:i.rp.id})})).json();if(!l||!l.storedToken)throw new Error(`Error verifying passkey: ${l.message??"unknown error"}`);return await((g=i.storage)==null?void 0:g.savePasskeyCredentialId(o.credentialId)),l}function oe(i){return`${(i==null?void 0:i.id)??"wallet"}-${new Date().toISOString()}`}async function ce(i){const{wallet:e,chain:t,client:n,ecosystem:r}=i,o=e.getAccount()||await e.connect({client:n,chain:t}),a=d(n,r),s=await(async()=>{const u=A({authOption:"wallet",client:i.client,ecosystem:i.ecosystem}),w=await a(`${u}&address=${o.address}&chainId=${t.id}`);if(!w.ok)throw new Error("Failed to generate SIWE login payload");return await w.json()})(),{signature:l}=await H({payload:s,account:o});return await(async()=>{const u=P({authOption:"wallet",client:i.client,ecosystem:i.ecosystem}),w=await a(`${u}&signature=${l}&payload=${encodeURIComponent(s)}`,{method:"POST",headers:{"Content-Type":"application/json"},body:h({signature:l,payload:s})});if(!w.ok)throw new Error("Failed to verify SIWE signature");return await w.json()})()}async function le({client:i,payload:{message:e,isRaw:t},storage:n}){const r=await n.getAuthCookie(),o=n.ecosystem,a=d(i,o);if(!r)throw new Error("No auth token found when signing message");const s=await a(`${p("inAppWallet")}/api/v1/enclave-wallet/sign-message`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":i.clientId,Authorization:`Bearer embedded-wallet-token:${r}`},body:h({messagePayload:{message:e,isRaw:t}})});if(!s.ok)throw new Error(`Failed to sign message - ${s.status} ${s.statusText}`);return await s.json()}async function ue({client:i,payload:e,storage:t}){const n=await t.getAuthCookie(),r=t.ecosystem,o=d(i,r);if(!n)throw new Error("No auth token found when signing transaction");const a=await o(`${p("inAppWallet")}/api/v1/enclave-wallet/sign-transaction`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":i.clientId,Authorization:`Bearer embedded-wallet-token:${n}`},body:h({transactionPayload:e})});if(!a.ok)throw new Error(`Failed to sign transaction - ${a.status} ${a.statusText}`);return(await a.json()).signature}async function de({client:i,payload:e,storage:t}){const n=await t.getAuthCookie(),r=t.ecosystem,o=d(i,r);if(!n)throw new Error("No auth token found when signing typed data");const a=await o(`${p("inAppWallet")}/api/v1/enclave-wallet/sign-typed-data`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":i.clientId,Authorization:`Bearer embedded-wallet-token:${n}`},body:h({...e})});if(!a.ok)throw new Error(`Failed to sign typed data - ${a.status} ${a.statusText}`);return await a.json()}class he{constructor({client:e,ecosystem:t,address:n,storage:r}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=t,this.address=n,this.localStorage=r}async postWalletSetUp(e){await this.localStorage.saveAuthCookie(e.storedToken.cookieString)}async getUserWalletStatus(){var o,a;const e=await this.localStorage.getAuthCookie();if(!e)return{status:"Logged Out"};const t=await W({authToken:e,client:this.client,ecosystem:this.ecosystem});if(!t)return{status:"Logged Out"};const n=t.wallets[0],r={email:(o=t.linkedAccounts.find(s=>s.details.email!==void 0))==null?void 0:o.details.email,phoneNumber:(a=t.linkedAccounts.find(s=>s.details.phone!==void 0))==null?void 0:a.details.phone,userWalletId:t.id||"",recoveryShareManagement:"ENCLAVE"};return n?{status:"Logged In, Wallet Initialized",walletAddress:n.address,authDetails:r,account:await this.getAccount()}:{status:"Logged In, Wallet Uninitialized",authDetails:r}}async getAccount(){const e=this.client,t=this.localStorage,n=this.address,r=this.ecosystem,o=async a=>{const s=k({client:e,chain:T(a.chainId)}),l={to:a.to?y(a.to):void 0,data:a.data,value:typeof a.value=="bigint"?f(a.value):void 0,gas:typeof a.gas=="bigint"?f(a.gas+a.gas/BigInt(10)):void 0,nonce:typeof a.nonce=="number"?f(a.nonce):f(await _(async()=>{const{eth_getTransactionCount:c}=await import("./eth_getTransactionCount-DZL9WXCX.js");return{eth_getTransactionCount:c}},__vite__mapDeps([0,1,2])).then(({eth_getTransactionCount:c})=>c(s,{address:y(this.address),blockTag:"pending"}))),chainId:f(a.chainId)};return typeof a.maxFeePerGas=="bigint"?(l.maxFeePerGas=f(a.maxFeePerGas),l.maxPriorityFeePerGas=typeof a.maxPriorityFeePerGas=="bigint"?f(a.maxPriorityFeePerGas):void 0,l.type=2):(l.gasPrice=typeof a.gasPrice=="bigint"?f(a.gasPrice):void 0,l.type=0),ue({client:e,storage:t,payload:l})};return{address:y(n),async signTransaction(a){if(!a.chainId)throw new Error("chainId required in tx to sign");return o({chainId:a.chainId,...a})},async sendTransaction(a){const s=k({client:e,chain:T(a.chainId)}),l=await o(a),c=await $(s,l);return j({client:e,ecosystem:r,chainId:a.chainId,walletAddress:n,walletType:"inApp",transactionHash:c,contractAddress:a.to??void 0,gasPrice:a.gasPrice}),{transactionHash:c}},async signMessage({message:a}){const s=typeof a=="string"?{message:a,isRaw:!1}:{message:typeof a.raw=="string"?a.raw:z(a.raw),isRaw:!0},{signature:l}=await le({client:e,payload:s,storage:t});return l},async signTypedData(a){const s=D(a),{signature:l}=await de({client:e,payload:s,storage:t});return l}}}}const we={height:"100%",width:"100%",border:"none",backgroundColor:"transparent",colorScheme:"light",position:"fixed",top:"0px",right:"0px",zIndex:"2147483646",display:"none",pointerEvents:"all"},I=new Map;class pe{constructor({link:e,baseUrl:t,iframeId:n,container:r,onIframeInitialize:o,localStorage:a,clientId:s,ecosystem:l}){if(Object.defineProperty(this,"iframe",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"POLLING_INTERVAL_SECONDS",{enumerable:!0,configurable:!0,writable:!0,value:1.4}),Object.defineProperty(this,"iframeBaseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"clientId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.localStorage=a,this.clientId=s,this.ecosystem=l,this.iframeBaseUrl=t,typeof document>"u")return;r=r??document.body;let c=document.getElementById(n);const u=new URL(e);if(!c||c.src!==u.href){c=document.createElement("iframe");const w={...we};Object.assign(c.style,w),c.setAttribute("id",n),c.setAttribute("fetchpriority","high"),r.appendChild(c),c.src=u.href;const g=m=>{if(m.data.eventType==="ewsIframeLoaded"){if(window.removeEventListener("message",g),!c){console.warn("thirdweb iFrame not found");return}this.onIframeLoadHandler(c,o)()}};window.addEventListener("message",g)}this.iframe=c}async onIframeLoadedInitVariables(){var e,t;return{authCookie:await this.localStorage.getAuthCookie(),deviceShareStored:await this.localStorage.getDeviceShare(),walletUserId:await this.localStorage.getWalletUserId(),clientId:this.clientId,partnerId:(e=this.ecosystem)==null?void 0:e.partnerId,ecosystemId:(t=this.ecosystem)==null?void 0:t.id}}onIframeLoadHandler(e,t){return async()=>{var o;const n=new MessageChannel,r=new Promise((a,s)=>{n.port1.onmessage=l=>{const{data:c}=l;n.port1.close(),c.success||s(new Error(c.error)),I.set(e.src,!0),t&&t(),a(!0)}});(o=e==null?void 0:e.contentWindow)==null||o.postMessage({eventType:"initIframe",data:await this.onIframeLoadedInitVariables()},this.iframeBaseUrl,[n.port2]),await r}}async call({procedureName:e,params:t,showIframe:n=!1}){var a;if(!this.iframe)throw new Error("Iframe not found. You are likely calling this from the backend where the DOM is not available.");for(;!I.get(this.iframe.src);)await b(this.POLLING_INTERVAL_SECONDS*1e3);n&&(this.iframe.style.display="block",await b(.005*1e3));const r=new MessageChannel,o=new Promise((s,l)=>{r.port1.onmessage=async c=>{const{data:u}=c;r.port1.close(),n&&(await b(.1*1e3),this.iframe&&(this.iframe.style.display="none")),u.success?s(u.data):l(new Error(u.error))}});return(a=this.iframe.contentWindow)==null||a.postMessage({eventType:e,data:{...t,...await this.onIframeLoadedInitVariables()}},this.iframeBaseUrl,[r.port2]),o}destroy(){this.iframe&&I.delete(this.iframe.src)}}class ge extends pe{constructor({clientId:e,baseUrl:t,ecosystem:n}){super({iframeId:me+((n==null?void 0:n.id)||""),link:fe({clientId:e,path:G,ecosystem:n,baseUrl:t}).href,baseUrl:t,container:typeof document>"u"?void 0:document.body,localStorage:new L({storage:v,clientId:e,ecosystem:n}),clientId:e,ecosystem:n}),this.clientId=e,this.ecosystem=n}}function fe({clientId:i,baseUrl:e,path:t,ecosystem:n,queryParams:r}){var a;const o=new URL(`${t}`,e);if(r)for(const s of Object.keys(r))o.searchParams.set(s,((a=r[s])==null?void 0:a.toString())||"");return o.searchParams.set("clientId",i),(n==null?void 0:n.partnerId)!==void 0&&o.searchParams.set("partnerId",n.partnerId),(n==null?void 0:n.id)!==void 0&&o.searchParams.set("ecosystemId",n.id),o}const me="thirdweb-in-app-wallet-iframe";async function ye({client:i,ecosystem:e,authToken:t}){const r=await d(i,e)(`${p("inAppWallet")}/api/v1/enclave-wallet/generate`,{method:"POST",headers:{"Content-Type":"application/json","x-thirdweb-client-id":i.clientId,Authorization:`Bearer embedded-wallet-token:${t}`}});if(!r.ok)throw new Error(`Failed to generate wallet - ${r.status} ${r.statusText}`);const{wallet:o}=await r.json();return o}class be{constructor({baseUrl:e,querier:t,preLogin:n,postLogin:r,client:o,ecosystem:a}){Object.defineProperty(this,"LoginQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"preLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"postLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"baseUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.baseUrl=e,this.LoginQuerier=t,this.preLogin=n,this.postLogin=r,this.client=o,this.ecosystem=a}async sendEmailLoginOtp({email:e}){return await this.LoginQuerier.call({procedureName:"sendThirdwebEmailLoginOtp",params:{email:e}})}async sendSmsLoginOtp({phoneNumber:e}){return await this.LoginQuerier.call({procedureName:"sendThirdwebSmsLoginOtp",params:{phoneNumber:e}})}}class Ie extends be{async authenticateWithModal(){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:void 0,showIframe:!0})}async loginWithModal(){await this.preLogin();const e=await this.authenticateWithModal();return this.postLogin(e)}async authenticateWithIframe({email:e}){return this.LoginQuerier.call({procedureName:"loginWithThirdwebModal",params:{email:e},showIframe:!0})}async loginWithIframe({email:e}){await this.preLogin();const t=await this.authenticateWithIframe({email:e});return this.postLogin(t)}async authenticateWithCustomJwt({encryptionKey:e,jwt:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom jwt auth");return this.LoginQuerier.call({procedureName:"loginWithCustomJwt",params:{encryptionKey:e,jwt:t}})}async loginWithCustomJwt({encryptionKey:e,jwt:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom jwt auth");await this.preLogin();const n=await this.authenticateWithCustomJwt({encryptionKey:e,jwt:t});return this.postLogin(n)}async authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:t}){return this.LoginQuerier.call({procedureName:"loginWithCustomAuthEndpoint",params:{encryptionKey:e,payload:t}})}async loginWithCustomAuthEndpoint({encryptionKey:e,payload:t}){if(!e||e.length===0)throw new Error("Encryption key is required for custom auth");await this.preLogin();const n=await this.authenticateWithCustomAuthEndpoint({encryptionKey:e,payload:t});return this.postLogin(n)}async authenticateWithEmailOtp({email:e,otp:t,recoveryCode:n}){return this.LoginQuerier.call({procedureName:"verifyThirdwebEmailLoginOtp",params:{email:e,otp:t,recoveryCode:n}})}async loginWithEmailOtp({email:e,otp:t,recoveryCode:n}){const r=await this.authenticateWithEmailOtp({email:e,otp:t,recoveryCode:n});return this.postLogin(r)}async authenticateWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:n}){return this.LoginQuerier.call({procedureName:"verifyThirdwebSmsLoginOtp",params:{phoneNumber:e,otp:t,recoveryCode:n}})}async loginWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:n}){const r=await this.authenticateWithSmsOtp({phoneNumber:e,otp:t,recoveryCode:n});return this.postLogin(r)}}class ke{constructor({client:e,querier:t,onAuthSuccess:n,ecosystem:r,baseUrl:o,localStorage:a}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"AuthQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"onAuthSuccess",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"BaseLogin",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=r,this.AuthQuerier=t,this.localStorage=a,this.onAuthSuccess=n,this.BaseLogin=new Ie({postLogin:async s=>this.postLogin(s),preLogin:async()=>{await this.preLogin()},ecosystem:r,querier:t,client:e,baseUrl:o})}async preLogin(){await this.logout()}async postLogin({storedToken:e,walletDetails:t}){return e.shouldStoreCookieString&&await this.localStorage.saveAuthCookie(e.cookieString),await this.onAuthSuccess({storedToken:e,walletDetails:t})}async loginWithAuthToken(e,t){var o;e.storedToken.authProvider!=="Backend"&&await this.preLogin();const n=await W({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});if(!n)throw new Error("Cannot login, no user found for auth token");if(n.wallets.length>0&&((o=n.wallets[0])==null?void 0:o.type)==="enclave")return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:n.wallets[0].address}});if(n.wallets.length===0){const a=await ye({authToken:e.storedToken.cookieString,client:this.client,ecosystem:this.ecosystem});return this.postLogin({storedToken:e.storedToken,walletDetails:{walletAddress:a.address}})}const r=await this.AuthQuerier.call({procedureName:"loginWithStoredTokenDetails",params:{storedToken:e.storedToken,recoveryCode:t}});return this.postLogin(r)}async loginWithModal(){return this.BaseLogin.loginWithModal()}async authenticateWithModal(){return this.BaseLogin.authenticateWithModal()}async loginWithIframe(e){return this.BaseLogin.loginWithIframe(e)}async authenticateWithIframe(e){return this.BaseLogin.authenticateWithIframe(e)}async loginWithCustomJwt(e){return this.BaseLogin.loginWithCustomJwt(e)}async authenticateWithCustomJwt(e){return this.BaseLogin.authenticateWithCustomJwt(e)}async loginWithCustomAuthEndpoint(e){return this.BaseLogin.loginWithCustomAuthEndpoint(e)}async authenticateWithCustomAuthEndpoint(e){return this.BaseLogin.authenticateWithCustomAuthEndpoint(e)}async sendEmailLoginOtp({email:e}){return this.BaseLogin.sendEmailLoginOtp({email:e})}async sendSmsLoginOtp({phoneNumber:e}){return this.BaseLogin.sendSmsLoginOtp({phoneNumber:e})}async loginWithEmailOtp(e){return await this.preLogin(),this.BaseLogin.loginWithEmailOtp(e)}async authenticateWithEmailOtp(e){return this.BaseLogin.authenticateWithEmailOtp(e)}async loginWithSmsOtp(e){return await this.preLogin(),this.BaseLogin.loginWithSmsOtp(e)}async authenticateWithSmsOtp(e){return this.BaseLogin.authenticateWithSmsOtp(e)}async logout(){const e=await this.localStorage.removeAuthCookie(),t=await this.localStorage.removeWalletUserId();return{success:e||t}}}const Te=async i=>{const{client:e,ecosystem:t}=i,n=A({client:e,ecosystem:t,authOption:i.strategy}),r={"Content-Type":"application/json","x-client-id":e.clientId};t!=null&&t.id&&(r["x-ecosystem-id"]=t.id),t!=null&&t.partnerId&&(r["x-ecosystem-partner-id"]=t.partnerId);const o=(()=>{switch(i.strategy){case"email":return{email:i.email};case"phone":return{phone:i.phoneNumber}}})(),a=await fetch(n,{method:"POST",headers:r,body:h(o)});if(!a.ok)throw new Error("Failed to send verification code");return await a.json()},O=async i=>{const{client:e,ecosystem:t}=i,n=P({authOption:i.strategy,client:i.client,ecosystem:i.ecosystem}),r={"Content-Type":"application/json","x-client-id":e.clientId};t!=null&&t.id&&(r["x-ecosystem-id"]=t.id),t!=null&&t.partnerId&&(r["x-ecosystem-partner-id"]=t.partnerId);const o=(()=>{switch(i.strategy){case"email":return{email:i.email,code:i.verificationCode};case"phone":return{phone:i.phoneNumber,code:i.verificationCode}}})(),a=await fetch(n,{method:"POST",headers:r,body:h(o)});if(!a.ok)throw new Error("Failed to verify verification code");return await a.json()};class C{constructor({client:e,ecosystem:t,querier:n,localStorage:r}){Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"walletManagerQuerier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"localStorage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.client=e,this.ecosystem=t,this.walletManagerQuerier=n,this.localStorage=r}async postWalletSetUp(e){e.deviceShareStored&&await this.localStorage.saveDeviceShare(e.deviceShareStored,e.storedToken.authDetails.userWalletId)}async getUserWalletStatus(){const e=await this.walletManagerQuerier.call({procedureName:"getUserStatus",params:void 0});return e.status==="Logged In, Wallet Initialized"?{status:"Logged In, Wallet Initialized",...e.user,account:await this.getAccount()}:e.status==="Logged In, New Device"?{status:"Logged In, New Device",...e.user}:e.status==="Logged In, Wallet Uninitialized"?{status:"Logged In, Wallet Uninitialized",...e.user}:{status:e.status}}async getAccount(){var a;const e=this.walletManagerQuerier,t=this.client,n=(a=this.ecosystem)==null?void 0:a.partnerId,{address:r}=await e.call({procedureName:"getAddress",params:void 0}),o=async s=>{const l={to:s.to??void 0,data:s.data,value:s.value,gasLimit:s.gas,nonce:s.nonce,chainId:s.chainId};s.maxFeePerGas?(l.accessList=s.accessList,l.maxFeePerGas=s.maxFeePerGas,l.maxPriorityFeePerGas=s.maxPriorityFeePerGas,l.type=2):(l.gasPrice=s.gasPrice,l.type=0);const c=E().rpc,{signedTransaction:u}=await e.call({procedureName:"signTransaction",params:{transaction:l,chainId:s.chainId,partnerId:n,rpcEndpoint:`https://${s.chainId}.${c}`}});return u};return{address:y(r),async signTransaction(s){if(!s.chainId)throw new Error("chainId required in tx to sign");return o({...s,chainId:s.chainId})},async sendTransaction(s){const l=k({client:t,chain:T(s.chainId)}),c=await o(s),u=await $(l,c);return j({client:t,chainId:s.chainId,walletAddress:r,walletType:"inApp",transactionHash:u,contractAddress:s.to??void 0,gasPrice:s.gasPrice}),{transactionHash:u}},async signMessage({message:s}){const l=typeof s=="string"?s:s.raw instanceof Uint8Array?s.raw:R(s.raw),{signedMessage:c}=await e.call({procedureName:"signMessage",params:{message:l,partnerId:n,chainId:1}});return c},async signTypedData(s){var S;const l=D(s);(S=l.types)!=null&&S.EIP712Domain&&(l.types.EIP712Domain=void 0);const c=l.domain,u=c==null?void 0:c.chainId,g={...c!=null&&c.verifyingContract?{verifyingContract:c==null?void 0:c.verifyingContract}:{},name:c==null?void 0:c.name,version:c==null?void 0:c.version};u&&(g.chainId=u);const m=E().rpc,{signedTypedData:M}=await e.call({procedureName:"signTypedDataV4",params:{domain:g,types:l.types,message:l.message,chainId:Number.parseInt(BigInt(u||1).toString()),partnerId:n,rpcEndpoint:`https://${u}.${m}`}});return M}}}}class Oe{isClientIdLegacyPaper(e){return e.indexOf("-")>0&&e.length===36}constructor({client:e,onAuthSuccess:t,ecosystem:n,passkeyDomain:r}){if(Object.defineProperty(this,"client",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ecosystem",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"querier",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"storage",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"auth",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"passkeyDomain",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.isClientIdLegacyPaper(e.clientId))throw new Error("You are using a legacy clientId. Please use the clientId found on the thirdweb dashboard settings page");const o=p("inAppWallet");this.client=e,this.ecosystem=n,this.passkeyDomain=r,this.storage=new L({storage:v,clientId:e.clientId,ecosystem:n}),this.querier=new ge({clientId:e.clientId,ecosystem:n,baseUrl:o}),this.auth=new ke({client:e,querier:this.querier,baseUrl:o,localStorage:this.storage,ecosystem:n,onAuthSuccess:async a=>{if(t==null||t(a),a.storedToken.authDetails.walletType==="sharded"&&(await this.querier.call({procedureName:"migrateFromShardToEnclave",params:{storedToken:a.storedToken}})||console.warn("Failed to migrate from sharded to enclave wallet, continuing with sharded wallet")),this.wallet=await this.initializeWallet(a.storedToken.cookieString),!this.wallet)throw new Error("Failed to initialize wallet");const s="deviceShareStored"in a.walletDetails?a.walletDetails.deviceShareStored:void 0;return await this.wallet.postWalletSetUp({storedToken:a.storedToken,deviceShareStored:s}),this.wallet instanceof C&&await this.querier.call({procedureName:"initIframe",params:{partnerId:n==null?void 0:n.partnerId,ecosystemId:n==null?void 0:n.id,clientId:this.client.clientId,deviceShareStored:"deviceShareStored"in a.walletDetails?a.walletDetails.deviceShareStored:null,walletUserId:a.storedToken.authDetails.userWalletId,authCookie:a.storedToken.cookieString}}),{user:{status:"Logged In, Wallet Initialized",authDetails:a.storedToken.authDetails,account:await this.wallet.getAccount(),walletAddress:a.walletDetails.walletAddress}}}})}async initializeWallet(e){var r;const t=await this.storage.getAuthCookie();if(!e&&t===null)throw new Error("No auth token provided and no stored auth token found to initialize the wallet");const n=await W({authToken:e||t,client:this.client,ecosystem:this.ecosystem});if(!n)throw new Error("Cannot initialize wallet, no user logged in");if(n.wallets.length===0)throw new Error("Cannot initialize wallet, this user does not have a wallet generated yet");return((r=n.wallets[0])==null?void 0:r.type)==="enclave"?new he({client:this.client,ecosystem:this.ecosystem,address:n.wallets[0].address,storage:this.storage}):new C({client:this.client,ecosystem:this.ecosystem,querier:this.querier,localStorage:this.storage})}async getUser(){if(!this.wallet){const e=await this.storage.getAuthCookie();if(!e)return{status:"Logged Out"};this.wallet=await this.initializeWallet(e)}if(!this.wallet)throw new Error("Wallet not initialized");return await this.wallet.getUserWalletStatus()}getAccount(){if(!this.wallet)throw new Error("Wallet not initialized");return this.wallet.getAccount()}async preAuthenticate(e){return Te({...e,client:this.client,ecosystem:this.ecosystem})}async authenticateWithRedirect(e,t,n){return Q({authOption:e,client:this.client,ecosystem:this.ecosystem,redirectUrl:n,mode:t})}async loginWithAuthToken(e,t){return this.auth.loginWithAuthToken(e,t)}async authenticate(e){const t=e.strategy;switch(t){case"email":return O({...e,client:this.client,ecosystem:this.ecosystem});case"phone":return O({...e,client:this.client,ecosystem:this.ecosystem});case"auth_endpoint":return X({payload:e.payload,client:this.client,ecosystem:this.ecosystem});case"jwt":return te({jwt:e.jwt,client:this.client,ecosystem:this.ecosystem});case"passkey":return this.passkeyAuth(e);case"iframe_email_verification":return this.auth.authenticateWithIframe({email:e.email});case"iframe":return this.auth.authenticateWithModal();case"apple":case"facebook":case"google":case"telegram":case"github":case"twitch":case"farcaster":case"line":case"x":case"steam":case"coinbase":case"discord":return q({authOption:t,client:this.client,ecosystem:this.ecosystem,closeOpenedWindow:e.closeOpenedWindow,openedWindow:e.openedWindow});case"guest":return ee({client:this.client,ecosystem:this.ecosystem,storage:v});case"backend":return Z({client:this.client,walletSecret:e.walletSecret,ecosystem:this.ecosystem});case"wallet":return ce({ecosystem:this.ecosystem,client:this.client,wallet:e.wallet,chain:e.chain})}}async connect(e){const t=e.strategy;switch(t){case"auth_endpoint":case"jwt":{const n=await this.authenticate(e);return await this.loginWithAuthToken(n,e.encryptionKey)}case"iframe_email_verification":return this.auth.loginWithIframe({email:e.email});case"iframe":return this.auth.loginWithModal();case"passkey":{const n=await this.passkeyAuth(e);return this.loginWithAuthToken(n)}case"backend":case"phone":case"email":case"wallet":case"apple":case"facebook":case"google":case"farcaster":case"telegram":case"github":case"line":case"x":case"guest":case"coinbase":case"twitch":case"steam":case"discord":{const n=await this.authenticate(e);return await this.auth.loginWithAuthToken(n)}default:ve(t)}}async logout(){return await this.auth.logout()}async passkeyAuth(e){const{PasskeyWebClient:t}=await _(async()=>{const{PasskeyWebClient:s}=await import("./passkeys-IfmtYbXL.js").then(l=>l.p);return{PasskeyWebClient:s}},__vite__mapDeps([3,1,2,4,5])),{passkeyName:n,storeLastUsedPasskey:r=!0}=e,o=new t,a=this.storage;return e.type==="sign-up"?re({client:this.client,ecosystem:this.ecosystem,username:n,passkeyClient:o,storage:r?a:void 0,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}}):se({client:this.client,ecosystem:this.ecosystem,passkeyClient:o,storage:r?a:void 0,rp:{id:this.passkeyDomain??window.location.hostname,name:this.passkeyDomain??window.document.title}})}async linkProfile(e){const{storedToken:t}=await this.authenticate(e);return await ne({client:e.client,tokenToLink:t.cookieString,storage:this.storage,ecosystem:e.ecosystem||this.ecosystem})}async unlinkProfile(e){return await ae({client:this.client,storage:this.storage,ecosystem:this.ecosystem,profileToUnlink:e})}async getProfiles(){return ie({client:this.client,ecosystem:this.ecosystem,storage:this.storage})}}function ve(i,e){throw new Error(`Invalid param: ${i}`)}export{Oe as InAppWebConnector};
