import{i as s}from"./addresses-DVWfx5EX.js";import{r as a,w as r}from"./index-fFHDa7eL.js";import{d as m}from"./decimals-CIlTGhrd.js";const o="0x06fdde03",d=[],i=[{type:"string"}];async function y(c){return a({contract:c.contract,method:[o,d,i],params:[]})}async function u(c){return r(()=>y(c),{cacheKey:`${c.contract.chain.id}:${c.contract.address}:name`,cacheTime:Number.POSITIVE_INFINITY})}const T="0x95d89b41",h=[],N=[{type:"string"}];async function l(c){return a({contract:c.contract,method:[T,h,N],params:[]})}async function I(c){return r(()=>l(c),{cacheKey:`${c.contract.chain.id}:${c.contract.address}:symbol`,cacheTime:Number.POSITIVE_INFINITY})}async function E(c){if(s(c.contract.address))return{name:"Ether",symbol:"ETH",decimals:18,...c.contract.chain.nativeCurrency};try{const[t,e,n]=await Promise.all([u(c).catch(()=>""),I(c),m(c)]);return{name:t,symbol:e,decimals:n}}catch{throw new Error("Invalid currency token")}}export{E as getCurrencyMetadata};
